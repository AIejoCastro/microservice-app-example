name: Infrastructure Pipeline

on:
  push:
    branches: [ main ]
    paths:
      - 'terraform/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'terraform/**'
  workflow_dispatch:

env:
  TF_VERSION: 1.5.0

jobs:
  terraform-validate:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ env.TF_VERSION }}
    
    - name: Terraform Format Check
      working-directory: terraform
      run: terraform fmt -check -recursive
    
    - name: Terraform Init (no backend)
      working-directory: terraform
      run: terraform init -backend=false
    
    - name: Terraform Validate
      working-directory: terraform
      run: terraform validate

  terraform-plan:
    needs: terraform-validate
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Terraform Init
      working-directory: terraform
      run: terraform init
    
    - name: Terraform Plan
      working-directory: terraform
      run: terraform plan -no-color
      id: plan
    
    - name: Comment PR
      uses: actions/github-script@v6
      env:
        PLAN: "${{ steps.plan.outputs.stdout }}"
      with:
        script: |
          const output = `### Terraform Plan
          \`\`\`
          ${process.env.PLAN}
          \`\`\``;
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          });

  terraform-apply:
    needs: terraform-validate
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: production
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Terraform Init
      working-directory: terraform
      run: terraform init
    
    - name: Terraform Apply
      working-directory: terraform
      run: terraform apply -auto-approve
