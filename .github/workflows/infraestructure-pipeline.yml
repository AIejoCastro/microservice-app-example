name: Infrastructure Pipeline

on:
  push:
    branches: [ main ]
    paths:
      - 'terraform/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'terraform/**'
  workflow_dispatch:

env:
  TF_VERSION: 1.5.0
  ARM_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTIONID }}
  ARM_CLIENT_ID:       ${{ secrets.CLIENTID }}
  ARM_CLIENT_SECRET:   ${{ secrets.CLIENTSECRET }}
  ARM_TENANT_ID:       ${{ secrets.TENANTID }}

jobs:
  terraform-validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Format Check
        working-directory: terraform
        run: terraform fmt -check -recursive

      - name: Terraform Init
        working-directory: terraform
        run: terraform init -backend-config="resource_group_name=tfstate-rg" \
                           -backend-config="storage_account_name=tfsa1758595608" \
                           -backend-config="container_name=tfstate" \
                           -backend-config="key=terraform.tfstate"

      - name: Terraform Validate
        working-directory: terraform
        run: terraform validate

  terraform-plan:
    needs: terraform-validate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Init
        working-directory: terraform
        run: terraform init -backend-config="resource_group_name=tfstate-rg" \
                           -backend-config="storage_account_name=tfsa1758595608" \
                           -backend-config="container_name=tfstate" \
                           -backend-config="key=terraform.tfstate"

      - name: Terraform Plan
        working-directory: terraform
        env:
          ARM_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTIONID }}
          ARM_CLIENT_ID:       ${{ secrets.CLIENTID }}
          ARM_CLIENT_SECRET:   ${{ secrets.CLIENTSECRET }}
          ARM_TENANT_ID:       ${{ secrets.TENANTID }}
        run: terraform plan -out=tfplan -no-color

      - name: Upload Plan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: terraform/tfplan

  terraform-apply:
    needs: terraform-plan
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Download Plan Artifact
        uses: actions/download-artifact@v4
        with:
          name: terraform-plan
          path: terraform

      - name: Terraform Apply
        working-directory: terraform
        env:
          ARM_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTIONID }}
          ARM_CLIENT_ID:       ${{ secrets.CLIENTID }}
          ARM_CLIENT_SECRET:   ${{ secrets.CLIENTSECRET }}
          ARM_TENANT_ID:       ${{ secrets.TENANTID }}
        run: terraform apply -auto-approve tfplan
