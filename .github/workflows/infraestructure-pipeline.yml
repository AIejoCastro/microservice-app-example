name: Infrastructure Pipeline

on:
  push:
    branches: [ main, dev, feature/** ]
    paths:
      - 'terraform/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'terraform/**'
  workflow_dispatch:

env:
  TF_VERSION: 1.5.0

jobs:
  terraform-validate:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ env.TF_VERSION }}
    
    - name: Terraform Format Check
      working-directory: terraform
      run: terraform fmt -check -recursive
    
    - name: Terraform Init (no backend)
      working-directory: terraform
      run: terraform init -backend=false
    
    - name: Terraform Validate
      working-directory: terraform
      run: terraform validate

  terraform-plan:
    needs: terraform-validate
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Terraform Init
      working-directory: terraform
      run: terraform init
    
    - name: Terraform Plan
      working-directory: terraform
      run: terraform plan -no-color
      id: plan

    - name: Upload Plan as Artifact
      uses: actions/upload-artifact@v3
      with:
        name: tf-plan
        path: terraform

  terraform-apply:
    needs: terraform-plan
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Terraform Init
      working-directory: terraform
      run: terraform init
    
    - name: Terraform Apply
      working-directory: terraform
      run: terraform apply -auto-approve
