name: Development Pipeline

on:
  push:
    branches: [ develop, master ]
    paths:
      - 'auth-api/**'
      - 'users-api/**'
      - 'todos-api/**'
      - 'frontend/**'
      - 'log-message-processor/**'
  pull_request:
    branches: [ master ]
  workflow_dispatch:

env:
  NODE_VERSION: '16'
  JAVA_VERSION: '11'
  GO_VERSION: '1.21'
  PYTHON_VERSION: '3.9'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [auth-api, users-api, todos-api, frontend, log-message-processor]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Environment
      uses: ./.github/actions/setup-env
      with:
        service: ${{ matrix.service }}

    - name: Setup Node.js for frontend
      if: matrix.service == 'frontend'
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Install Python2 for node-gyp (only frontend)
      if: matrix.service == 'frontend'
      run: |
        sudo apt-get update
        sudo apt-get install -y python-is-python2 make g++ gcc

    - name: Rebuild frontend dependencies safely
      if: matrix.service == 'frontend'
      run: |
        cd frontend
        npm install --legacy-peer-deps
        npm rebuild node-sass --force

    - name: Build Service
      run: |
        cd ${{ matrix.service }}
        chmod +x ../scripts/build-service.sh
        ../scripts/build-service.sh ${{ matrix.service }}
    
    - name: Run Tests
      run: |
        cd ${{ matrix.service }}
        chmod +x ../scripts/test-service.sh
        ../scripts/test-service.sh ${{ matrix.service }}

  build-docker-images:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Login to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
    
    - name: Build and Push Docker Images
      run: |
        chmod +x scripts/build-and-push-images.sh
        scripts/build-and-push-images.sh

  deploy-to-azure:
    needs: build-docker-images
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Restart Azure App Services
      run: |
        chmod +x scripts/deploy-to-azure.sh
        scripts/deploy-to-azure.sh production
